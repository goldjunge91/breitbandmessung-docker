# Name des GitHub Actions Workflows
name: Build and Push Docker Image to Docker Hub (per-arch + manifest)

# Dieses Workflow wird bei einem Push auf den 'master'-Branch
# oder beim Erstellen eines neuen Tags ausgeführt.
on:
  push:
    branches: [ "master" ]
    tags: [ 'v*.*.*' ]

# Umgebungsvariablen, die im gesamten Workflow verfügbar sind.
env:
  IMAGE_NAME: goldjunge491/breitbandmessung
  VERSION: "3.10.0"

jobs:
  build-arch:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            suffix: amd64
          - platform: linux/arm64
            suffix: arm64
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ${{ matrix.platform }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.VERSION }}-${{ matrix.suffix }}
            ${{ env.IMAGE_NAME }}:latest-${{ matrix.suffix }}

  manifest:
    runs-on: ubuntu-latest
    needs: [build-arch]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push manifest for VERSION
        run: |
          docker buildx imagetools create \
            -t ${{ env.IMAGE_NAME }}:${{ env.VERSION }} \
            ${{ env.IMAGE_NAME }}:${{ env.VERSION }}-amd64 \
            ${{ env.IMAGE_NAME }}:${{ env.VERSION }}-arm64

      - name: Create and push manifest for latest
        run: |
          docker buildx imagetools create \
            -t ${{ env.IMAGE_NAME }}:latest \
            ${{ env.IMAGE_NAME }}:latest-amd64 \
            ${{ env.IMAGE_NAME }}:latest-arm64